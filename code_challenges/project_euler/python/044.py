"""http://projecteuler.net/problem=044

Pentagon numbers

Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2. The first ten pentagonal numbers are:
1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 - 22 = 48, is not pentagonal.
Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk - Pj| is minimised; what is the value of D?

Solution by jontsai <hello@jontsai.com>
"""
from utils import *

EXPECTED_ANSWER = 5482660
# real1m36.528s

LAST_PENTAGON_NUMBER = 3
PENTAGON_NUMS = [
    0,
    1,
    5,
    12,
]
    
def generate_pentagon_numbers_until_exceeds(value):
    global LAST_PENTAGON_NUMBER
    while PENTAGON_NUMS[LAST_PENTAGON_NUMBER] < value:
        LAST_PENTAGON_NUMBER += 1
        PENTAGON_NUMS.append(pentagon_number(LAST_PENTAGON_NUMBER))

k = 3
answer = None
while answer is None:
    pentagon_k = PENTAGON_NUMS[k]
    for j in xrange(2, k):
        pentagon_j = PENTAGON_NUMS[j]
        pentagon_difference = pentagon_k - pentagon_j
        pentagon_sum = pentagon_j + pentagon_k
        generate_pentagon_numbers_until_exceeds(pentagon_sum)
        if pentagon_difference in PENTAGON_NUMS and pentagon_sum in PENTAGON_NUMS:
            answer = pentagon_difference
            break
    k += 1

print 'Expected: %s, Answer: %s' % (EXPECTED_ANSWER, answer)

